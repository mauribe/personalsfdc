//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
//Methods Included: ResolveIP
// Primary Port Class Name: IP2GeoSoap	
// http://ws.cdyne.com/ip2geo/ip2geo.asmx?op=ResolveIP
public class wsCdyneCom {
	public class IP2GeoSoap {
		public String endpoint_x = 'http://ws.cdyne.com/ip2geo/ip2geo.asmx';
		public Map<String,String> inputHttpHeaders_x;
		public Map<String,String> outputHttpHeaders_x;
		public String clientCertName_x;
		public String clientCert_x;
		public String clientCertPasswd_x;
		public Integer timeout_x;
		private String[] ns_map_type_info = new String[]{'http://ws.cdyne.com/','wsCdyneCom'};

		public wsCdyneCom.IPInformation ResolveIP(String ipAddress,String licenseKey) {
			wsCdyneCom.ResolveIP_element request_x = new wsCdyneCom.ResolveIP_element();
			wsCdyneCom.ResolveIPResponse_element response_x;
			request_x.ipAddress = ipAddress;
			request_x.licenseKey = licenseKey;
			Map<String, wsCdyneCom.ResolveIPResponse_element> response_map_x = new Map<String, wsCdyneCom.ResolveIPResponse_element>();
			response_map_x.put('response_x', response_x);
			WebServiceCallout.invoke(
				this,
				request_x,
				response_map_x,
				new String[]{endpoint_x,
				'http://ws.cdyne.com/ResolveIP',
				'http://ws.cdyne.com/',
				'ResolveIP',
				'http://ws.cdyne.com/',
				'ResolveIPResponse',
				'wsCdyneCom.ResolveIPResponse_element'}
			);
			response_x = response_map_x.get('response_x');
			return response_x.ResolveIPResult;
		}
		
		private DOM.XmlNode populateDoc(DOM.Document doc){
			String env = 'http://schemas.xmlsoap.org/soap/envelope/';
			String xsi = 'http://www.w3.org/2001/XMLSchema-instance';
			String xsd = 'http://www.w3.org/2001/XMLSchema';
            
			DOM.XmlNode envelope = doc.createRootElement('Envelope', env, 'env');
			envelope.setNamespace('xsd', xsd);
			envelope.setNamespace('xsi', xsi);
			DOM.XmlNode header = envelope.addChildElement('Header', env, '');
			AddHeader(header);
			//System.debug(doc.toXmlString());
			DOM.XmlNode body = envelope.addChildElement('Body', env, '');
			return body;
		}

		private void AddHeader(DOM.XmlNode header){
		}

		public wsCdyneCom.IPInformation ResolveIP_Http(String ipAddress,String licenseKey) {
			DOM.Document doc = new DOM.Document();
			DOM.XmlNode body = populateDoc(doc);
			DOM.XmlNode methodNode = body.addChildElement('ResolveIP', 'http://ws.cdyne.com/', '');			
			wsCdyneCom.ResolveIP_element request_x = new wsCdyneCom.ResolveIP_element(ipAddress,licenseKey);
			request_x.populateXmlNode(methodNode);
			
			HttpRequest req = new HttpRequest();
			req.setEndpoint(endpoint_x);
			req.setMethod('POST');
			req.setHeader('Content-Type', 'text/xml; charset=UTF-8');
			req.setHeader('SOAPAction', 'http://ws.cdyne.com/ResolveIP');
			req.setBodyDocument(doc);
			//System.debug(req.getBody());
			Http http = new Http();
			HTTPResponse res = http.send(req);
			//System.debug(res.getBody());
			Dom.Document responseDoc = res.getBodyDocument();
			Dom.XmlNode rootNode = responseDoc.getRootElement();
			Dom.XmlNode bodyNode = rootNode.getChildElement('Body','http://schemas.xmlsoap.org/soap/envelope/');
			Dom.XmlNode ResolveIPResponseNode = bodyNode.getChildElement('ResolveIPResponse', 'http://ws.cdyne.com/');
						
			wsCdyneCom.ResolveIPResponse_element response_x = new wsCdyneCom.ResolveIPResponse_element(ResolveIPResponseNode);
			return response_x.ResolveIPResult;
		}
 	}
	public class IPInformation {
		public String City;
		public String StateProvince;
		public String Country;
		public String Organization;
		public Double Latitude;
		public Double Longitude;
		public String AreaCode;
		public String TimeZone;
		public Boolean HasDaylightSavings;
		public Integer Certainty;
		public String RegionName;
		public String CountryCode;
		private String[] City_type_info = new String[]{'City','http://ws.cdyne.com/','string','0','1','false'};
		private String[] StateProvince_type_info = new String[]{'StateProvince','http://ws.cdyne.com/','string','0','1','false'};
		private String[] Country_type_info = new String[]{'Country','http://ws.cdyne.com/','string','0','1','false'};
		private String[] Organization_type_info = new String[]{'Organization','http://ws.cdyne.com/','string','0','1','false'};
		private String[] Latitude_type_info = new String[]{'Latitude','http://ws.cdyne.com/','double','1','1','false'};
		private String[] Longitude_type_info = new String[]{'Longitude','http://ws.cdyne.com/','double','1','1','false'};
		private String[] AreaCode_type_info = new String[]{'AreaCode','http://ws.cdyne.com/','string','0','1','false'};
		private String[] TimeZone_type_info = new String[]{'TimeZone','http://ws.cdyne.com/','string','0','1','false'};
		private String[] HasDaylightSavings_type_info = new String[]{'HasDaylightSavings','http://ws.cdyne.com/','boolean','1','1','false'};
		private String[] Certainty_type_info = new String[]{'Certainty','http://ws.cdyne.com/','short','1','1','false'};
		private String[] RegionName_type_info = new String[]{'RegionName','http://ws.cdyne.com/','string','0','1','false'};
		private String[] CountryCode_type_info = new String[]{'CountryCode','http://ws.cdyne.com/','string','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://ws.cdyne.com/','true','false'};
		private String[] field_order_type_info = new String[]{'City','StateProvince','Country','Organization','Latitude','Longitude','AreaCode','TimeZone','HasDaylightSavings','Certainty','RegionName','CountryCode'};
		public IPInformation(){
		}
		public IPInformation(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode CityNode = responseNode.getChildElement('City', 'http://ws.cdyne.com/');
			this.City = (CityNode == null) ? null : CityNode.getText();
			nodesParsed.add(CityNode);
			//System.debug(this.City);			
			DOM.XmlNode StateProvinceNode = responseNode.getChildElement('StateProvince', 'http://ws.cdyne.com/');
			this.StateProvince = (StateProvinceNode == null) ? null : StateProvinceNode.getText();
			nodesParsed.add(StateProvinceNode);
			//System.debug(this.StateProvince);			
			DOM.XmlNode CountryNode = responseNode.getChildElement('Country', 'http://ws.cdyne.com/');
			this.Country = (CountryNode == null) ? null : CountryNode.getText();
			nodesParsed.add(CountryNode);
			//System.debug(this.Country);			
			DOM.XmlNode OrganizationNode = responseNode.getChildElement('Organization', 'http://ws.cdyne.com/');
			this.Organization = (OrganizationNode == null) ? null : OrganizationNode.getText();
			nodesParsed.add(OrganizationNode);
			//System.debug(this.Organization);			
			DOM.XmlNode LatitudeNode = responseNode.getChildElement('Latitude', 'http://ws.cdyne.com/');
			this.Latitude = (LatitudeNode == null) ? null : Double.valueOf(LatitudeNode.getText());
			nodesParsed.add(LatitudeNode);
			//System.debug(this.Latitude);			
			DOM.XmlNode LongitudeNode = responseNode.getChildElement('Longitude', 'http://ws.cdyne.com/');
			this.Longitude = (LongitudeNode == null) ? null : Double.valueOf(LongitudeNode.getText());
			nodesParsed.add(LongitudeNode);
			//System.debug(this.Longitude);			
			DOM.XmlNode AreaCodeNode = responseNode.getChildElement('AreaCode', 'http://ws.cdyne.com/');
			this.AreaCode = (AreaCodeNode == null) ? null : AreaCodeNode.getText();
			nodesParsed.add(AreaCodeNode);
			//System.debug(this.AreaCode);			
			DOM.XmlNode TimeZoneNode = responseNode.getChildElement('TimeZone', 'http://ws.cdyne.com/');
			this.TimeZone = (TimeZoneNode == null) ? null : TimeZoneNode.getText();
			nodesParsed.add(TimeZoneNode);
			//System.debug(this.TimeZone);			
			DOM.XmlNode HasDaylightSavingsNode = responseNode.getChildElement('HasDaylightSavings', 'http://ws.cdyne.com/');
			this.HasDaylightSavings = (HasDaylightSavingsNode == null) ? null : Boolean.valueOf(HasDaylightSavingsNode.getText());
			nodesParsed.add(HasDaylightSavingsNode);
			//System.debug(this.HasDaylightSavings);			
			DOM.XmlNode CertaintyNode = responseNode.getChildElement('Certainty', 'http://ws.cdyne.com/');
			this.Certainty = (CertaintyNode == null) ? null : Integer.valueOf(CertaintyNode.getText());
			nodesParsed.add(CertaintyNode);
			//System.debug(this.Certainty);			
			DOM.XmlNode RegionNameNode = responseNode.getChildElement('RegionName', 'http://ws.cdyne.com/');
			this.RegionName = (RegionNameNode == null) ? null : RegionNameNode.getText();
			nodesParsed.add(RegionNameNode);
			//System.debug(this.RegionName);			
			DOM.XmlNode CountryCodeNode = responseNode.getChildElement('CountryCode', 'http://ws.cdyne.com/');
			this.CountryCode = (CountryCodeNode == null) ? null : CountryCodeNode.getText();
			nodesParsed.add(CountryCodeNode);
			//System.debug(this.CountryCode);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode CityNode = outerNode.addChildElement('City', 'http://ws.cdyne.com/', '');
			CityNode.addTextNode((this.City == null) ? '' : this.City);
			Dom.XmlNode StateProvinceNode = outerNode.addChildElement('StateProvince', 'http://ws.cdyne.com/', '');
			StateProvinceNode.addTextNode((this.StateProvince == null) ? '' : this.StateProvince);
			Dom.XmlNode CountryNode = outerNode.addChildElement('Country', 'http://ws.cdyne.com/', '');
			CountryNode.addTextNode((this.Country == null) ? '' : this.Country);
			Dom.XmlNode OrganizationNode = outerNode.addChildElement('Organization', 'http://ws.cdyne.com/', '');
			OrganizationNode.addTextNode((this.Organization == null) ? '' : this.Organization);
			Dom.XmlNode LatitudeNode = outerNode.addChildElement('Latitude', 'http://ws.cdyne.com/', '');
			if(this.Latitude != null){
				LatitudeNode.addTextNode(String.valueOf(this.Latitude));
			}
			Dom.XmlNode LongitudeNode = outerNode.addChildElement('Longitude', 'http://ws.cdyne.com/', '');
			if(this.Longitude != null){
				LongitudeNode.addTextNode(String.valueOf(this.Longitude));
			}
			Dom.XmlNode AreaCodeNode = outerNode.addChildElement('AreaCode', 'http://ws.cdyne.com/', '');
			AreaCodeNode.addTextNode((this.AreaCode == null) ? '' : this.AreaCode);
			Dom.XmlNode TimeZoneNode = outerNode.addChildElement('TimeZone', 'http://ws.cdyne.com/', '');
			TimeZoneNode.addTextNode((this.TimeZone == null) ? '' : this.TimeZone);
			Dom.XmlNode HasDaylightSavingsNode = outerNode.addChildElement('HasDaylightSavings', 'http://ws.cdyne.com/', '');
			if(this.HasDaylightSavings != null){
				HasDaylightSavingsNode.addTextNode(String.valueOf(this.HasDaylightSavings));
			}
			Dom.XmlNode CertaintyNode = outerNode.addChildElement('Certainty', 'http://ws.cdyne.com/', '');
			if(this.Certainty != null){
				CertaintyNode.addTextNode(String.valueOf(this.Certainty));
			}
			Dom.XmlNode RegionNameNode = outerNode.addChildElement('RegionName', 'http://ws.cdyne.com/', '');
			RegionNameNode.addTextNode((this.RegionName == null) ? '' : this.RegionName);
			Dom.XmlNode CountryCodeNode = outerNode.addChildElement('CountryCode', 'http://ws.cdyne.com/', '');
			CountryCodeNode.addTextNode((this.CountryCode == null) ? '' : this.CountryCode);
		}
	}
	public class ResolveIP_element {
		public String ipAddress;
		public String licenseKey;
		private String[] ipAddress_type_info = new String[]{'ipAddress','http://ws.cdyne.com/','string','0','1','false'};
		private String[] licenseKey_type_info = new String[]{'licenseKey','http://ws.cdyne.com/','string','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://ws.cdyne.com/','true','false'};
		private String[] field_order_type_info = new String[]{'ipAddress','licenseKey'};
		public ResolveIP_element(){
		}
		public ResolveIP_element(String ipAddress,String licenseKey){
			this.ipAddress = ipAddress;
			this.licenseKey = licenseKey;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			//System.assertEquals('ResolveIP', outerNode.getName());
			Dom.XmlNode ipAddressNode = outerNode.addChildElement('ipAddress', 'http://ws.cdyne.com/', '');
			ipAddressNode.addTextNode((this.ipAddress == null) ? '' : this.ipAddress);
			Dom.XmlNode licenseKeyNode = outerNode.addChildElement('licenseKey', 'http://ws.cdyne.com/', '');
			licenseKeyNode.addTextNode((this.licenseKey == null) ? '' : this.licenseKey);
		}
	}
	public class ResolveIPResponse_element {
		public wsCdyneCom.IPInformation ResolveIPResult;
		private String[] ResolveIPResult_type_info = new String[]{'ResolveIPResult','http://ws.cdyne.com/','IPInformation','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://ws.cdyne.com/','true','false'};
		private String[] field_order_type_info = new String[]{'ResolveIPResult'};
		public ResolveIPResponse_element(){
		}
		public ResolveIPResponse_element(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('ResolveIPResponse', responseNode.getName());
			DOM.XmlNode ResolveIPResultNode = responseNode.getChildElement('ResolveIPResult', 'http://ws.cdyne.com/');
			if(ResolveIPResultNode == null){
				this.ResolveIPResult = null;
			} else{
				wsCdyneCom.IPInformation ResolveIPResultObj = new wsCdyneCom.IPInformation(ResolveIPResultNode);
				nodesParsed.add(ResolveIPResultNode);
				this.ResolveIPResult = ResolveIPResultObj;
			}
			//System.debug(this.ResolveIPResult);			
		}
	}
}